{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Spinner/Spinner.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-selector.js","redux/contacts/contacts-operations.js","components/Container/Container.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/Spinner/Spinner.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","loading","createReducer","items","_","payload","state","filter","id","error","console","log","combineReducers","store","configureStore","reducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","concat","logger","devTools","process","getLoading","getContacts","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","contact","name","includes","axios","defaults","baseURL","contactsOperations","fetchContacts","dispatch","get","then","data","catch","addContact","number","post","deleteContact","delete","Container","title","children","className","s","container","Section","section","ContactForm","useState","setName","setNumber","useSelector","useDispatch","hendleChenge","e","target","value","reset","onSubmit","preventDefault","map","alert","form","label","type","pattern","required","onChange","input","btn","Filter","ContactList","list","item","text","onClick","Spinner","size","box","spinner","App","isLoadingContacts","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7e55ebb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1EkMu\",\"item\":\"ContactList_item__SMztd\",\"text\":\"ContactList_text__7sXtW\",\"btn\":\"ContactList_btn__1W2J6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2DJ05\",\"title\":\"Container_title__9389E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__39CP-\",\"title\":\"Section_title__3r3aa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__MhJnb\",\"input\":\"Filter_input__35SQ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Spinner_box__2XfKj\",\"spinner\":\"Spinner_spinner__s6_Fl\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './contacts-actions';\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: error => console.log(error),\n  [addContactError]: error => console.log(error),\n  [deleteContactError]: error => console.log(error),\n});\n\nexport default combineReducers({\n  loading,\n  items,\n  filter,\n  error,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport contactsReducer from './contacts/contacts-reducer';\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({ serializableCheck: false }).concat(logger),\n  devTools: process.env.NODE_ENV === 'development',\n});\n","export const getLoading = state => state.contacts.loading;\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'https://61bea5632a1dd4001708a355.mockapi.io';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\n// Альтернатива fetchContacts на ахинхронных функциях\r\n// const fetchContacts = () => async dispatch => {\r\n//   dispatch(fetchContactsRequest());\r\n\r\n//   try {\r\n//     const { data } = await axios.get('/contacts');\r\n//     dispatch(fetchContactsSuccess(data));\r\n//   } catch (error) {\r\n//     dispatch(fetchContactsError(error));\r\n//   }\r\n// };\r\n\r\nconst addContact =\r\n  ({ name, number }) =>\r\n  dispatch => {\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n      .post('/contacts', contact)\r\n      .then(({ data }) => dispatch(addContactSuccess(data)))\r\n      .catch(error => dispatch(addContactError(error)));\r\n  };\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nconst contactsOperations = {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\nexport default contactsOperations;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nexport default function Container({ title, children }) {\r\n  return (\r\n    <div className={s.container}>\r\n      {title && <h1 className={s.title}>{title}</h1>}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/contacts-selector';\nimport contactsOperations from 'redux/contacts/contacts-operations';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const hendleChenge = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const hendleSubmite = e => {\n    e.preventDefault();\n\n    contacts.map(contact => contact.name).includes(name)\n      ? alert(`${name} is already in contacts.`)\n      : dispatch(contactsOperations.addContact({ name, number }));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={hendleSubmite} className={s.form}>\n      <label className={s.label}>\n        <p className={s.title}>Name</p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={hendleChenge}\n          className={s.input}\n        />\n\n        <p className={s.title}>Number</p>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={hendleChenge}\n          className={s.input}\n        />\n\n        <button className={s.btn}>Add contact</button>\n      </label>\n    </form>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/contacts/contacts-selector';\nimport { changeFilter } from 'redux/contacts/contacts-actions';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.filter}>\n      Find contacts by name:\n      <input\n        type=\"text\"\n        value={value}\n        className={s.input}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n      />\n    </label>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getVisibleContacts } from 'redux/contacts/contacts-selector';\nimport contactsOperations from 'redux/contacts/contacts-operations';\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const forDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <li key={contact.id} className={s.item}>\n          <p className={s.text}>{`${contact.name}: ${contact.number}`}</p>\n          <button\n            type=\"button\"\n            className={s.btn}\n            onClick={() => forDeleteContact(contact.id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { ImSpinner } from 'react-icons/im';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Spinner.module.css';\r\n\r\nexport default function Spinner({ size }) {\r\n  return (\r\n    <div className={s.box}>\r\n      <ImSpinner size={size} className={s.spinner} />\r\n    </div>\r\n  );\r\n}\r\n\r\nSpinner.propTypes = {\r\n  size: PropTypes.number.isRequired,\r\n};\r\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getLoading } from 'redux/contacts/contacts-selector';\nimport contactsOperations from 'redux/contacts/contacts-operations';\nimport Container from 'components/Container/Container';\nimport Section from 'components/Section/Section';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport Spinner from 'components/Spinner/Spinner';\nimport 'App.css';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isLoadingContacts = useSelector(getLoading);\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container title=\"Phonebook\">\n      <Section>\n        <ContactForm />\n      </Section>\n\n      {isLoadingContacts && <Spinner size={100} />}\n\n      {!isLoadingContacts && (\n        <Section title=\"Contacts\">\n          <Filter />\n          <ContactList />\n        </Section>\n      )}\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from 'redux/store';\nimport App from 'App';\nimport 'index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3FDT3\",\"label\":\"ContactForm_label__1JjNg\",\"title\":\"ContactForm_title__1PhNj\",\"input\":\"ContactForm_input__2OTnw\",\"btn\":\"ContactForm_btn__1um4s\"};"],"sourceRoot":""}